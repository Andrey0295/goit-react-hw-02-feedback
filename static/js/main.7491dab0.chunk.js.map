{"version":3,"sources":["components/Container/Container.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/MainFeedback/MainFeedback.js","App.js","index.js","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Container","children","className","styles","container","defaultProps","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","idx","type","name","fedbackBtn","onClick","Section","title","feedbackSection","MainFeedback","state","handleChange","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+MAKMA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KAO5CD,EAAUK,aAAe,CACvBJ,SAAU,IAGGD,Q,qCCNAM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC8BEC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,4CACCD,EAAQ,EACP,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,sDAAyBC,EAAzB,UAGF,cAAC,EAAD,CAAcN,QAAS,0B,gBCShBO,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,gCACE,uDACCD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBAEEC,KAAK,SACLC,KAAMH,EACNhB,UAAWC,IAAOmB,WAClBC,QAASP,EALX,SAOGE,GANIC,U,gBCNTK,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SACjB,OACE,yBAASwB,MAAM,WAAWvB,UAAWC,IAAOuB,gBAA5C,SACGzB,KASPuB,EAAQnB,aAAe,CACrBJ,SAAU,IAGGuB,QCoCAG,E,4MAlDbC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,EAGtBgB,aAAe,SAAAC,GAAM,IACXT,EAASS,EAAEC,cAAXV,KAER,EAAKW,UAAS,SAAAC,GAAS,sBACpBZ,EAAOY,EAAUZ,GAAQ,MAE5B,EAAKa,qBACL,EAAKC,mC,wDAGP,WACEC,KAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BrB,MAAOqB,EAAUrB,MAAQ,Q,6CAI7B,WACEwB,KAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BpB,mBAAsC,IAAjBoB,EAAUxB,KAAcwB,EAAUrB,Y,oBAI3D,WAEE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEG,QAJc,CAAC,OAAQ,MAAO,WAK9BC,gBAAiBoB,KAAKP,eAExB,cAAC,EAAD,CACEpB,KAAM2B,KAAKR,MAAMnB,KACjBC,QAAS0B,KAAKR,MAAMlB,QACpBC,IAAKyB,KAAKR,MAAMjB,IAChBC,MAAOwB,KAAKR,MAAMhB,MAClBC,mBAAoBuB,KAAKR,MAAMf,4B,GA5CdwB,aCSZC,MAVf,WACE,OACE,mCACE,cAAC,EAAD,UACE,cAAC,EAAD,S,MCDRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCX1BC,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,WAAa,sC,kBCA/BD,EAAOC,QAAU,CAAC,gBAAkB,oC","file":"static/js/main.7491dab0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nContainer.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification/Notification';\r\n\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <h1>Statistics</h1>\r\n      {total > 0 ? (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive feedbacks: {positivePercentage}%</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message={'No feedback given'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      <h1>Please leave feedback</h1>\r\n      {options.map((option, idx) => (\r\n        <button\r\n          key={idx}\r\n          type=\"button\"\r\n          name={option}\r\n          className={styles.fedbackBtn}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => {\r\n  return (\r\n    <section title=\"feedback\" className={styles.feedbackSection}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nSection.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\n\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\n\r\nclass MainFeedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name } = e.currentTarget;\r\n\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    this.setState(prevState => ({\r\n      total: prevState.total + 1,\r\n    }));\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    this.setState(prevState => ({\r\n      positivePercentage: (prevState.good * 100) / prevState.total,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const buttonNames = ['good', 'bad', 'neutral'];\r\n    return (\r\n      <Section>\r\n        <FeedbackOptions\r\n          options={buttonNames}\r\n          onLeaveFeedback={this.handleChange}\r\n        />\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.state.total}\r\n          positivePercentage={this.state.positivePercentage}\r\n        />\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainFeedback;\r\n","import React from 'react';\n\nimport Container from './components/Container/Container';\nimport MainFeedback from './components/MainFeedback/MainFeedback';\n\nfunction App() {\n  return (\n    <>\n      <Container>\n        <MainFeedback />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1I95U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fedbackBtn\":\"FeedbackOptions_fedbackBtn__2jMgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackSection\":\"Section_feedbackSection__2uH_d\"};"],"sourceRoot":""}